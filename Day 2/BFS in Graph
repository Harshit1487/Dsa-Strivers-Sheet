#include<bits/stdc++.h>

vector<int> BFS(int v, vector<pair<int, int>> edges)
{
    // Write your code here
    vector<int> adj[v];
    for(int i=0;i<edges.size();i++){
        adj[edges[i].first].push_back(edges[i].second);
        adj[edges[i].second].push_back(edges[i].first);
    }
    
    vector<int> res;
    vector<bool> vis(v+1, false);
    
    for(int i = 0; i < v; i++)
           sort(adj[i].begin(), adj[i].end());
    
    for(int i=0;i<v;i++){
        if(!vis[i]){
            queue<int> q;
            q.push(i);
            vis[i]=true;
            while(!q.empty()){
                int n = q.front();
                q.pop();
                res.push_back(n);
                for(auto it:adj[n]){
                    if(!vis[it]){
                        q.push(it);
                        vis[it]=true;
                    }
                }
            }
        }
    }
    return res;
}
